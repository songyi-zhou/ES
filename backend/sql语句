-- 创建数据库
DROP DATABASE IF EXISTS system;
CREATE DATABASE IF NOT EXISTS system DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;

USE system;

-- 删除表（注意顺序，先删除有外键引用的表）
DROP TABLE IF EXISTS evaluation_attachments;
DROP TABLE IF EXISTS evaluation_materials;
DROP TABLE IF EXISTS class_group_members;
DROP TABLE IF EXISTS classes;

-- 删除表（注意删除顺序，先删除有外键约束的表）
DROP TABLE IF EXISTS user_roles;
DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS roles;
DROP TABLE IF EXISTS evaluation_rules;
DROP TABLE IF EXISTS rule_attachments;

-- 创建角色表
CREATE TABLE roles (
    id INT PRIMARY KEY AUTO_INCREMENT COMMENT '角色ID',
    role_name VARCHAR(50) NOT NULL UNIQUE COMMENT '角色名称',
    role_level INT NOT NULL COMMENT '角色等级：0-普通学生，1-综测小组成员，2-综测负责人，3-导员，4-管理员',
    description VARCHAR(200) COMMENT '角色描述',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- 创建用户表
CREATE TABLE users (
    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '用户ID',
    user_id VARCHAR(20) NOT NULL UNIQUE COMMENT '学号/工号',
    password VARCHAR(255) NOT NULL COMMENT '密码',
    name VARCHAR(50) NOT NULL COMMENT '姓名',
    gender ENUM('男', '女', '其他') NOT NULL COMMENT '性别',
    avatar_url VARCHAR(255) DEFAULT NULL COMMENT '头像URL',
    department VARCHAR(100) NOT NULL COMMENT '学院',
    major VARCHAR(100) COMMENT '专业',
    class_name VARCHAR(50) COMMENT '班级',
    phone VARCHAR(20) COMMENT '电话',
    email VARCHAR(100) COMMENT '邮箱',
    status TINYINT(1) DEFAULT 1 COMMENT '状态：1-启用，0-禁用',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
    last_login TIMESTAMP NULL COMMENT '最后登录时间',
    role_level INT DEFAULT 0 COMMENT '角色等级',
    class_id BIGINT COMMENT '班级ID',
    squad VARCHAR(50) COMMENT '中队信息（学生为所属中队号，导员为负责中队列表）',
    INDEX idx_user_id (user_id),
    INDEX idx_department (department)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- 修改用户-角色关联表
CREATE TABLE user_roles (
    user_id BIGINT,
    role VARCHAR(50) NOT NULL,
    PRIMARY KEY (user_id, role),
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- 插入基础角色数据
INSERT INTO roles (role_name, role_level, description) VALUES
('ROLE_STUDENT', 0, '普通学生'),
('ROLE_GROUP_MEMBER', 1, '综测小组成员'),
('ROLE_GROUP_LEADER', 2, '综测负责人'),
('ROLE_COUNSELOR', 3, '导员'),
('ROLE_ADMIN', 4, '系统管理员');



-- 创建班级表
CREATE TABLE IF NOT EXISTS classes (
    id VARCHAR(50) PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    department VARCHAR(100),
    major VARCHAR(100),
    grade VARCHAR(20),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 创建综测小组成员与班级关联表
CREATE TABLE IF NOT EXISTS class_group_members (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    user_id BIGINT NOT NULL,
    class_id VARCHAR(50) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    name VARCHAR(100),
    department VARCHAR(100),
    major VARCHAR(100),
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id),
    FOREIGN KEY (class_id) REFERENCES classes(id),
    INDEX idx_user_id (user_id),
    INDEX idx_class_id (class_id),
    squad VARCHAR(50) NOT NULL COMMENT '中队'
);

-- 创建综测材料表
CREATE TABLE IF NOT EXISTS evaluation_materials (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    user_id BIGINT NOT NULL,
    evaluation_type VARCHAR(20) NOT NULL,
    title VARCHAR(100) NOT NULL,
    description TEXT,
    status VARCHAR(20) DEFAULT 'PENDING',
    reviewer_id BIGINT,
    review_comment TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    class_id VARCHAR(50) NOT NULL,
    reported_at TIMESTAMP,
    department VARCHAR(255) NOT NULL,
    squad VARCHAR(255) NOT NULL,
    score DECIMAL(4,1) DEFAULT 0.0 COMMENT '材料加减分值',
    FOREIGN KEY (user_id) REFERENCES users(id),
    FOREIGN KEY (reviewer_id) REFERENCES users(id),
    FOREIGN KEY (class_id) REFERENCES classes(id),
    INDEX idx_class_id (class_id),
    INDEX idx_status_reported_at (status, reported_at)
);

-- 创建材料附件表
CREATE TABLE IF NOT EXISTS evaluation_attachments (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    material_id BIGINT NOT NULL,
    file_name VARCHAR(255) NOT NULL,
    file_path VARCHAR(255) NOT NULL,
    file_size BIGINT NOT NULL,
    file_type VARCHAR(50) NOT NULL,
    upload_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (material_id) REFERENCES evaluation_materials(id) ON DELETE CASCADE
);


-- 规章制度表
CREATE TABLE evaluation_rules (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(255) NOT NULL COMMENT '规章标题',
    description TEXT COMMENT '规章描述',
    uploaded_by BIGINT NOT NULL COMMENT '上传人ID',
    uploaded_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '上传时间',
    updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
    status VARCHAR(20) NOT NULL DEFAULT 'ACTIVE' COMMENT '状态：ACTIVE-生效 INACTIVE-失效',
    version INT NOT NULL DEFAULT 1 COMMENT '版本号',
    department VARCHAR(50),
    uploaded_by_department VARCHAR(50),
    squad VARCHAR(50) COMMENT '中队标识，用于区分材料应用的中队和查看权限'
);

-- 规章附件表
CREATE TABLE rule_attachments (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    rule_id BIGINT NOT NULL COMMENT '关联的规章ID',
    file_name VARCHAR(255) NOT NULL COMMENT '文件名',
    file_path VARCHAR(500) NOT NULL COMMENT '文件路径',
    file_size BIGINT NOT NULL COMMENT '文件大小(字节)',
    file_type VARCHAR(50) NOT NULL COMMENT '文件类型',
    upload_time DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '上传时间',
    FOREIGN KEY (rule_id) REFERENCES evaluation_rules(id)
);

ALTER TABLE evaluation_rules 
MODIFY COLUMN title VARCHAR(255) NOT NULL COMMENT '规章标题',
CHANGE COLUMN created_by uploaded_by BIGINT NOT NULL COMMENT '上传人ID',
CHANGE COLUMN created_at uploaded_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '上传时间';

CREATE TABLE squad_group_leader (
    id BIGINT PRIMARY KEY AUTO_INCREMENT,
    user_id BIGINT NOT NULL,
    grade_id VARCHAR(50) NOT NULL,  -- 例如：2021、2022等
    department VARCHAR(50) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UNIQUE KEY uk_user_grade (user_id, grade_id),
    squad VARCHAR(50) NOT NULL COMMENT '中队'
);


-- 先删除外键约束（如果有的话）
ALTER TABLE instructor_squad 
DROP FOREIGN KEY IF EXISTS FK_instructor_squad_instructor;

-- 删除表
DROP TABLE IF EXISTS instructor_squad;

-- 材料表索引
ALTER TABLE evaluation_materials ADD INDEX idx_status_reported_at (status, reported_at);
ALTER TABLE evaluation_materials ADD INDEX idx_user_id (user_id);

-- 用户表索引
ALTER TABLE users ADD INDEX idx_department_class (department, class_id);

-- 导员中队表索引
ALTER TABLE instructor_squad ADD INDEX idx_instructor_dept_grade (instructor_id, department, grade);

-- 加分规则表
CREATE TABLE bonus_rules (
  id BIGINT PRIMARY KEY AUTO_INCREMENT,
  type CHAR(1) NOT NULL COMMENT '加分类型:A-思想政治,C-科研竞赛,D-文体活动',
  reason VARCHAR(200) NOT NULL COMMENT '加分理由',
  level VARCHAR(50) NOT NULL COMMENT '级别',
  award_level VARCHAR(50) DEFAULT NULL COMMENT '获奖等级(C类专用)',
  activity_type VARCHAR(20) DEFAULT NULL COMMENT '活动类型(D类专用:society-社团,other-其他)',
  points DECIMAL(5,2) NOT NULL COMMENT '分值',
  description TEXT COMMENT '描述说明',
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
) ;

-- 删除 group_members 表
DROP TABLE IF EXISTS group_members;

-- 学生表
CREATE TABLE students (
    id BIGINT PRIMARY KEY AUTO_INCREMENT,
    student_id VARCHAR(20) UNIQUE NOT NULL COMMENT '学号',
    name VARCHAR(50) NOT NULL COMMENT '姓名',
    department VARCHAR(50) NOT NULL COMMENT '学院',
    major VARCHAR(50) COMMENT '专业',
    class_name VARCHAR(50) COMMENT '班级名称',
    class_id VARCHAR(20) COMMENT '班级ID',
    squad VARCHAR(10) COMMENT '所属中队号',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
    INDEX idx_student_id (student_id)
) COMMENT='学生信息表';

-- 导员表
CREATE TABLE instructors (
    id BIGINT PRIMARY KEY AUTO_INCREMENT,
    instructor_id VARCHAR(20) UNIQUE NOT NULL COMMENT '工号',
    name VARCHAR(50) NOT NULL COMMENT '姓名',
    department VARCHAR(50) NOT NULL COMMENT '学院',
    major VARCHAR(50) COMMENT '专业',
    squad_list VARCHAR(100) COMMENT '负责的中队列表，用逗号分隔',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
    INDEX idx_instructor_id (instructor_id)
) COMMENT='导员信息表';

-- 导入日志表
CREATE TABLE import_logs (
    id BIGINT PRIMARY KEY AUTO_INCREMENT,
    type VARCHAR(20) NOT NULL COMMENT '导入类型',
    status VARCHAR(20) NOT NULL COMMENT '导入状态',
    description TEXT COMMENT '描述',
    errors TEXT COMMENT '错误信息',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间'
) COMMENT='导入日志表';

-- 修改现有的用户表（添加外键约束）
ALTER TABLE users 
ADD CONSTRAINT fk_student_id FOREIGN KEY (user_id) 
REFERENCES students(student_id) ON DELETE RESTRICT,
ADD CONSTRAINT fk_instructor_id FOREIGN KEY (user_id) 
REFERENCES instructors(instructor_id) ON DELETE RESTRICT;

-- 添加索引以提高查询性能
ALTER TABLE users ADD INDEX idx_squad (squad);
ALTER TABLE students ADD INDEX idx_squad (squad);
ALTER TABLE instructors ADD INDEX idx_squad_list (squad_list);

ALTER TABLE group_members ADD COLUMN student_id VARCHAR(20);

--group_members用来存储所有综测小组成员信息

-- 更新现有数据
UPDATE evaluation_materials em
JOIN users u ON em.user_id = u.id
SET em.department = u.department,
    em.squad = u.squad;

-- 删除已存在的表
DROP TABLE IF EXISTS moral_monthly_evaluation;
DROP TABLE IF EXISTS academic_evaluation;
DROP TABLE IF EXISTS research_competition_evaluation;
DROP TABLE IF EXISTS sports_arts_evaluation;

-- A表（思想品德月度测评表）
CREATE TABLE moral_monthly_evaluation (
    academic_year VARCHAR(9) NOT NULL COMMENT '学年',
    semester TINYINT NOT NULL COMMENT '学期：1或2',
    month TINYINT NOT NULL COMMENT '月份：1-12',
    student_id VARCHAR(20) NOT NULL COMMENT '学号',
    name VARCHAR(50) NOT NULL COMMENT '姓名',
    squad VARCHAR(20) NOT NULL COMMENT '所属中队',
    department VARCHAR(50) NOT NULL COMMENT '学院',
    major VARCHAR(50) NOT NULL COMMENT '专业',
    base_score DECIMAL(5,2) DEFAULT 100 COMMENT '基础分',
    total_bonus DECIMAL(5,2) DEFAULT 0 COMMENT '总加分',
    total_penalty DECIMAL(5,2) DEFAULT 0 COMMENT '总扣分',
    raw_score DECIMAL(5,2) COMMENT '原始总分',
    material_ids TEXT COMMENT '相关材料ID，逗号分隔',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    declare_start_time DATETIME COMMENT '申报开始时间',
    declare_end_time DATETIME COMMENT '申报结束时间',
    review_end_time DATETIME COMMENT '审核截止时间',
    publicity_start_time DATETIME COMMENT '公示开始时间',
    publicity_end_time DATETIME COMMENT '公示截止时间',
    status TINYINT DEFAULT 0 COMMENT '状态（0：读写，1：只读）',
    description TEXT COMMENT '测评说明',
    PRIMARY KEY (academic_year, semester, month, student_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='思想品德月度测评表';

-- B表（成绩测评表）
CREATE TABLE academic_evaluation (
    academic_year VARCHAR(9) NOT NULL COMMENT '学年',
    semester TINYINT NOT NULL COMMENT '学期：1或2',
    student_id VARCHAR(20) NOT NULL COMMENT '学号',
    name VARCHAR(50) NOT NULL COMMENT '姓名',
    squad VARCHAR(20) NOT NULL COMMENT '所属中队',
    department VARCHAR(50) NOT NULL COMMENT '学院',
    major VARCHAR(50) NOT NULL COMMENT '专业',
    raw_score DECIMAL(5,2) COMMENT '原始总分',
    avg_score DECIMAL(5,2) COMMENT '平均分',
    std_dev DECIMAL(5,2) COMMENT '标准差',
    final_score DECIMAL(5,2) COMMENT '结果得分',
    `rank` INT COMMENT '专业内排名',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    publicity_start_time DATETIME COMMENT '公示开始时间',
    publicity_end_time DATETIME COMMENT '公示截止时间',
    status TINYINT DEFAULT 0 COMMENT '状态（0：读写，1：只读）',
    description TEXT COMMENT '测评说明',
    PRIMARY KEY (academic_year, semester, student_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='成绩测评表';

-- C表（科研竞赛测评表）
CREATE TABLE research_competition_evaluation (
    academic_year VARCHAR(9) NOT NULL COMMENT '学年',
    semester TINYINT NOT NULL COMMENT '学期：1或2',
    student_id VARCHAR(20) NOT NULL COMMENT '学号',
    name VARCHAR(50) NOT NULL COMMENT '姓名',
    squad VARCHAR(20) NOT NULL COMMENT '所属中队',
    department VARCHAR(50) NOT NULL COMMENT '学院',
    major VARCHAR(50) NOT NULL COMMENT '专业',
    base_score DECIMAL(5,2) DEFAULT 100 COMMENT '基础分',
    total_bonus DECIMAL(5,2) DEFAULT 0 COMMENT '总加分',
    total_penalty DECIMAL(5,2) DEFAULT 0 COMMENT '总扣分',
    raw_score DECIMAL(5,2) COMMENT '原始总分',
    avg_score DECIMAL(5,2) COMMENT '平均分',
    std_dev DECIMAL(5,2) COMMENT '标准差',
    final_score DECIMAL(5,2) COMMENT '结果得分',
    material_ids TEXT COMMENT '相关材料ID，逗号分隔',
    `rank` INT COMMENT '专业内排名',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    declare_start_time DATETIME COMMENT '申报开始时间',
    declare_end_time DATETIME COMMENT '申报结束时间',
    review_end_time DATETIME COMMENT '审核截止时间',
    publicity_start_time DATETIME COMMENT '公示开始时间',
    publicity_end_time DATETIME COMMENT '公示截止时间',
    status TINYINT DEFAULT 0 COMMENT '状态（0：读写，1：只读）',
    description TEXT COMMENT '测评说明',
    PRIMARY KEY (academic_year, semester, student_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='科研竞赛测评表';

-- D表（文体活动测评表）
CREATE TABLE sports_arts_evaluation (
    academic_year VARCHAR(9) NOT NULL COMMENT '学年',
    semester TINYINT NOT NULL COMMENT '学期：1或2',
    student_id VARCHAR(20) NOT NULL COMMENT '学号',
    name VARCHAR(50) NOT NULL COMMENT '姓名',
    squad VARCHAR(20) NOT NULL COMMENT '所属中队',
    department VARCHAR(50) NOT NULL COMMENT '学院',
    major VARCHAR(50) NOT NULL COMMENT '专业',
    base_score DECIMAL(5,2) DEFAULT 100 COMMENT '基础分',
    total_bonus DECIMAL(5,2) DEFAULT 0 COMMENT '总加分',
    total_penalty DECIMAL(5,2) DEFAULT 0 COMMENT '总扣分',
    raw_score DECIMAL(5,2) COMMENT '原始总分',
    avg_score DECIMAL(5,2) COMMENT '平均分',
    std_dev DECIMAL(5,2) COMMENT '标准差',
    final_score DECIMAL(5,2) COMMENT '结果得分',
    material_ids TEXT COMMENT '相关材料ID，逗号分隔',
    `rank` INT COMMENT '专业内排名',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    declare_start_time DATETIME COMMENT '申报开始时间',
    declare_end_time DATETIME COMMENT '申报结束时间',
    review_end_time DATETIME COMMENT '审核截止时间',
    publicity_start_time DATETIME COMMENT '公示开始时间',
    publicity_end_time DATETIME COMMENT '公示截止时间',
    status TINYINT DEFAULT 0 COMMENT '状态（0：读写，1：只读）',
    description TEXT COMMENT '测评说明',
    PRIMARY KEY (academic_year, semester, student_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='文体活动测评表';

-- 删除已存在的表
DROP TABLE IF EXISTS comprehensive_result;

-- 综合测评结果表
CREATE TABLE comprehensive_result (
    academic_year VARCHAR(9) NOT NULL COMMENT '学年',
    semester TINYINT NOT NULL COMMENT '学期：1或2',
    student_id VARCHAR(20) NOT NULL COMMENT '学号',
    name VARCHAR(50) NOT NULL COMMENT '姓名',
    class_name VARCHAR(50) NOT NULL COMMENT '班级',
    squad VARCHAR(20) NOT NULL COMMENT '所属中队',
    department VARCHAR(50) NOT NULL COMMENT '学院',
    major VARCHAR(50) NOT NULL COMMENT '专业',
    moral_score DECIMAL(5,2) COMMENT 'A类-思想品德得分',
    academic_score DECIMAL(5,2) COMMENT 'B类-成绩得分',
    research_score DECIMAL(5,2) COMMENT 'C类-科研竞赛得分',
    sports_arts_score DECIMAL(5,2) COMMENT 'D类-文体活动得分',
    extra_score DECIMAL(5,2) DEFAULT 0 COMMENT 'E类-附加分',
    total_score DECIMAL(5,2) COMMENT '总得分',
    `rank` INT COMMENT '专业内排名',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    publicity_start_time DATETIME COMMENT '公示开始时间',
    publicity_end_time DATETIME COMMENT '公示截止时间',
    status TINYINT DEFAULT 0 COMMENT '状态（0：读写，1：只读）',
    description TEXT COMMENT '测评说明',
    PRIMARY KEY (academic_year, semester, student_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='综合测评结果表';

-- 删除已存在的表
DROP TABLE IF EXISTS evaluation_config_logs;

-- 综测配置日志表
CREATE TABLE evaluation_config_logs (
    id BIGINT AUTO_INCREMENT PRIMARY KEY COMMENT '日志ID',
    academic_year VARCHAR(9) NOT NULL COMMENT '学年',
    semester TINYINT NOT NULL COMMENT '学期：1或2',
    operator_id VARCHAR(20) NOT NULL COMMENT '操作人ID',
    operator_name VARCHAR(50) NOT NULL COMMENT '操作人姓名',
    section VARCHAR(20) NOT NULL COMMENT '操作区域：基本信息/时间配置/分数配置/注意事项',
    operation_type VARCHAR(20) NOT NULL COMMENT '操作类型：创建/修改/删除',
    description TEXT NOT NULL COMMENT '操作描述',
    old_value TEXT COMMENT '修改前的值',
    new_value TEXT COMMENT '修改后的值',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
    ip_address VARCHAR(50) COMMENT '操作IP地址',
    user_agent VARCHAR(200) COMMENT '用户浏览器信息'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='综测配置日志表';

-- 添加索引
CREATE INDEX idx_evaluation_config_logs_year_semester ON evaluation_config_logs(academic_year, semester);
CREATE INDEX idx_evaluation_config_logs_operator ON evaluation_config_logs(operator_id);
CREATE INDEX idx_evaluation_config_logs_created_at ON evaluation_config_logs(created_at);

-- 创建A类学期评分表
CREATE TABLE moral_semester_evaluation (
    academic_year VARCHAR(9) NOT NULL COMMENT '学年',
    semester TINYINT NOT NULL COMMENT '学期：1或2',
    student_id VARCHAR(20) NOT NULL COMMENT '学号',
    name VARCHAR(50) NOT NULL COMMENT '姓名',
    squad VARCHAR(20) NOT NULL COMMENT '所属中队',
    department VARCHAR(50) NOT NULL COMMENT '学院',
    major VARCHAR(50) NOT NULL COMMENT '专业',
    base_score DECIMAL(5,2) DEFAULT 100 COMMENT '基础分',
    total_bonus DECIMAL(5,2) DEFAULT 0 COMMENT '总加分',
    total_penalty DECIMAL(5,2) DEFAULT 0 COMMENT '总扣分',
    raw_score DECIMAL(5,2) COMMENT '原始总分',
    avg_score DECIMAL(5,2) COMMENT '平均分',
    std_dev DECIMAL(5,2) COMMENT '标准差',
    final_score DECIMAL(5,2) COMMENT '结果得分',
    material_ids TEXT COMMENT '相关材料ID，逗号分隔',
    `rank` INT COMMENT '专业内排名',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
    publicity_start_time DATETIME COMMENT '公示开始时间',
    publicity_end_time DATETIME COMMENT '公示截止时间',
    status TINYINT DEFAULT 0 COMMENT '状态（0：读写，1：只读）',
    description TEXT COMMENT '测评说明',
    PRIMARY KEY (academic_year, semester, student_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='思想品德学期测评表';
